local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "BlueFlame TSB Paid",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "ladowaning...",
    LoadingSubtitle = "by Nielegalni",
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "BlueFlame Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "BlueFlame",
       Subtitle = "Key System",
       Note = "Key is in discord!", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Key:02718294738199282625284jdksidbnao108473819lsodjwmnsofjanlfojnqKIrhrkiw9191783992982839kaojdne"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image

 local Toggle = Tab:CreateToggle({
    Name = "ESP",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(ESP)
while true do
    wait(5)
    print("ESP")
loadstring(game:HttpGet("https://raw.githubusercontent.com/RobloxCheatDev/Cheatsez/refs/heads/main/BOX%20ESP?token=GHSAT0AAAAAADCCHL6UMRH6EKT2PCZJ6SSWZ7ZDY3A"))()

    end,
 })

 local Toggle = Tab:CreateToggle({
    Name = "SpinBot",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        local RunService = game:GetService("RunService")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local SpinSpeed = 100 -- Prędkość obracania w stopniach na sekundę
        
        local function Spin()
            if LocalPlayer.Character then
                local humanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(0, math.rad(SpinSpeed * RunService.RenderStepped:Wait()), 0)
                end
            end
        end
        
        RunService.RenderStepped:Connect(Spin)
    end,
 })

 local Slider = MainTab:CreateSlider({
    Name = "Speed",
    Range = {1, 50},
    Increment = 10,
    Suffix = "WalkSpeed",
    CurrentValue = 1,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    game.Players.LocalPlayer.Character:SetAttribute("SpeedMultiplier", Value) 
    end,
 })
